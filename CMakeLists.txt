SET(PROJECT_NAME git-chat)
PROJECT(${PROJECT_NAME} C)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)
SET(CMAKE_C_STANDARD 99)

# compiler options
IF(CMAKE_COMPILER_IS_GNUCC)
	ADD_DEFINITIONS(-Wall -Werror -pedantic -std=c99)
ENDIF(CMAKE_COMPILER_IS_GNUCC)

#
# Configure Project
#
EXECUTE_PROCESS(
		COMMAND git rev-parse --short HEAD
		WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
		OUTPUT_VARIABLE GIT_COMMIT_SHORT_HASH
		OUTPUT_STRIP_TRAILING_WHITESPACE
)
SET(CMAKE_PROJECT_VERSION_MAJOR "0")
SET(CMAKE_PROJECT_VERSION_MINOR "1.git-${GIT_COMMIT_SHORT_HASH}")

CONFIGURE_FILE(
	"${PROJECT_SOURCE_DIR}/templates/version.h.in"
	"${PROJECT_BINARY_DIR}/include/version.h"
)

FILE(GLOB_RECURSE SRC_LIST FOLLOW_SYMLINKS src/*.c)
FILE(GLOB_RECURSE HEAD_FILES FOLLOW_SYMLINKS include/*.h ${PROJECT_BINARY_DIR}/include/*.h)
FILE(GLOB_RECURSE SHARE_LIST FOLLOW_SYMLINKS share/*)

#
# Set Include Directories
#
INCLUDE_DIRECTORIES(
	"${PROJECT_SOURCE_DIR}/include/"
	"${PROJECT_BINARY_DIR}/include/"
)

#
# Configure git-chat Executable and Installation
#
ADD_EXECUTABLE(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/src/git-chat.c ${SRC_LIST})
INSTALL(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)
INSTALL(DIRECTORY ${PROJECT_SOURCE_DIR}/share/ DESTINATION /usr/local/share/${PROJECT_NAME})
CONFIGURE_FILE(
		"${PROJECT_SOURCE_DIR}/ci/run-build.sh"
		"${PROJECT_BINARY_DIR}/run-build.sh"
		COPYONLY
)

#
# Configure Man Page Installation
#
FIND_PROGRAM(GZIP_EXECUTABLE gzip)
ADD_CUSTOM_TARGET(docs ALL)
ADD_DEPENDENCIES(docs ${PROJECT_NAME})
FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/docs)
STRING(TIMESTAMP CMAKE_COMPILATION_DATE "%d/%m/%Y")

FILE(GLOB MAN_PAGES ${PROJECT_SOURCE_DIR}/docs/*)
FOREACH(FILE ${MAN_PAGES})
	GET_FILENAME_COMPONENT(FILENAME ${FILE} NAME)
	CONFIGURE_FILE(
			"${FILE}"
			"${PROJECT_BINARY_DIR}/docs/${FILENAME}"
	)
	ADD_CUSTOM_COMMAND(TARGET docs
			COMMAND ${GZIP_EXECUTABLE} -c9 "${PROJECT_BINARY_DIR}/docs/${FILENAME}" > ${PROJECT_BINARY_DIR}/docs/${FILENAME}.gz
			DEPENDS docs)
	INSTALL(FILES ${PROJECT_BINARY_DIR}/docs/${FILENAME}.gz DESTINATION /usr/share/man/man1)
ENDFOREACH(FILE)

#
# Configure Unit and Integration Tests
#
ENABLE_TESTING()
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/test)