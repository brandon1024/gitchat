SET(PROJECT_NAME git-chat)
PROJECT(${PROJECT_NAME} C)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.11)

# version
SET(CMAKE_PROJECT_VERSION_MAJOR 0)
SET(CMAKE_PROJECT_VERSION_MINOR 1)

SET(CMAKE_C_STANDARD 99)

# compiler options
IF(CMAKE_COMPILER_IS_GNUCC)
    add_definitions(-Wall -Werror -pedantic -std=c99)
ENDIF(CMAKE_COMPILER_IS_GNUCC)

# Configure Dependencies
SET(BUILD_SHARED_LIBS OFF)
SET(BUILD_CLAR OFF)
SET(THREADSAFE ON)
SET(CMAKE_OSX_ARCHITECTURES i386;x86_64)

IF(DEFINED ENV{OPENSSL_ROOT_DIR})
    SET(OPENSSL_ROOT_DIR $ENV{OPENSSL_ROOT_DIR})
ENDIF()
IF(DEFINED ENV{OPENSSL_INCLUDE_DIR})
    SET(OPENSSL_INCLUDE_DIR $ENV{OPENSSL_INCLUDE_DIR})
ENDIF()
add_subdirectory(extern/libgit2)

# Configure Project
CONFIGURE_FILE(
    "${PROJECT_SOURCE_DIR}/templates/version.h.in"
    "${PROJECT_BINARY_DIR}/include/version.h"
)

FILE(GLOB_RECURSE SRC_LIST FOLLOW_SYMLINKS src/*.c)
FILE(GLOB_RECURSE HEAD_FILES FOLLOW_SYMLINKS include/*.h ${PROJECT_BINARY_DIR}/include/*.h)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}/include")

ADD_EXECUTABLE(${PROJECT_NAME} src/main.c ${SRC_LIST})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} LIBGIT2)
INSTALL(TARGETS ${PROJECT_NAME} DESTINATION bin)
