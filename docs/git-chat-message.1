.TH git-chat-message 1 "@CMAKE_COMPILATION_DATE@" "git-chat @CMAKE_PROJECT_VERSION_MAJOR@.@CMAKE_PROJECT_VERSION_MINOR@.@CMAKE_PROJECT_VERSION_PATCH@" "git-chat manual"

.SH NAME
git-chat-message \- Encrypt plaintext messages and commit them to the git history

.SH SYNOPSIS
.sp
.nf
\fIgit-chat-message\fR [(\-\-recipient <alias>)...] (\-m | \-\-message) <message>
\fIgit-chat-message\fR [(\-\-recipient <alias>)...] (\-f | \-\-file) <filename>
\fIgit-chat-message\fR (\-h | \-\-help)


.SH DESCRIPTION
\fIgit-chat\fR supports asymmetric encryption of plaintext messages through \fBGNU Privacy Guard\fR (gpg).

New messages are created as empty commit objects in the Git database. If successful, new message commits are created on the tip of the current branch. You can manually decrypt messages by piping the commit message body into gpg:

.PP
.in +4n
.EX
$ git-chat-message -m "my message"
$ git show --format="%B" HEAD | gpg --decrypt
.EE
.in
.PP

If the message, or a file containing the message, is not provided as a command line argument, the \fBvim\fR editor is invoked so that the user can compose the message. Multiple \fI-m\fR or \fI-f\fR are not supported at this time.

Messages may only be decrypted by message recipients given either implicitly or with the \fI--recipient\fR option. Each recipient, including the user who authored the message, must export their public key in ASCII-armored format into a file in the \fI.keys\fR directory within the git-chat space (see \fIgit-chat-import-key\fR). By default, messages are encrypted with all public keys in the \fI.keys\fR directory if no recipients are explicitly defined.

\fIgit-chat\fR manages an internal gpg keyring and trust store which is intentionally kept separate from the user's gpg home directory. The internal gpg home directory is located within the \fI.git\fR directory under \fI.git/.gnupg\fR. It is ill advised to manipulate the git-chat gpg home directory manually.


.SH OPTIONS
.TP
\-\-recipient <key uid>
Specify one recipient of the encrypted message. This option may be used multiple times to specify multiple recipients. The arguments provided must map to a existing and valid GPG public key in the keyring. Recipients provided can match any of:
.RS
.IP \[bu]
primary key fingerprint
.IP \[bu]
any subkey uid field
.IP \[bu]
any subkey name field
.IP \[bu]
any subkey email field
.IP \[bu]
any subkey comment field
.IP \[bu]
any subkey address field
.RE

.TP
\-m, \-\-message <message>
Provide the message at the command line.

.TP
\-f, \-\-file <file>
Provide the message as the content of a file. Use \fI-\fR to read the message from the standard input.

.TP
\-h, \-\-help
Print a simple synopsis and exit.

.SH SEE ALSO
\fBgit-chat-init\fR(1)
\fBgit-chat-import-key\fR(1)


.SH REPORTING BUGS
@DOCS_REPORTING_BUGS_SECTION@


.SH AUTHOR
@DOCS_AUTHORS_SECTION@
